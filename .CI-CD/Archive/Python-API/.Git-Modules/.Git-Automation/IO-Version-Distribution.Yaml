#!/usr/bin/env file .

# -*-  Coding: UTF-8  -*- #
# -*-  System: Linux  -*- #
# -*-  Usage:  *.Yaml -*- #

# Owner: Jacob B. Sanders
# Source: code.cloud-technology.io
# License: BSD 3-Clause License

#
# Copyright 2020 Jacob B. Sanders - Cloud Hybrid LLC. & Affiliates
#
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
#
# 1.  Redistributions of source code must retain the above copyright notice, this list of
#     conditions and the following disclaimer.
#
# 2.  Redistributions in binary form must reproduce the above copyright notice, this list of
#     conditions and the following disclaimer in the documentation and/or other materials
#     provided with the distribution.
#
# 3.  Neither the name of the copyright holder nor the names of its contributors may be used
#     to endorse or promote products derived from this software without specific prior written
#     permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.
#

---

#
# ========================================================================
# --> Pipeline: Continuous Integration & Deployment Configuration(s)
# ========================================================================
#

# ------------------------------------------------------------------------
# YAML Configuration Anchors
# ------------------------------------------------------------------------

.Version-Distribution: &Version-Distribution-Pre-Execution [ "apk add bash curl git jq" ]

.Version-Distribution: &Version-Distribution-Runner [ "Docker", "Dot-Environment" ]

.Version-Distribution: &Version-Distribution-Stage "Package"

.Version-Distribution: &Version-Distribution-Artifacts {
    reports: { dotenv: ".IO/Environment.env" },
    paths: [ ".IO/Environment.env" ]
}

.Version-Distribution: &Version-Distribution-Trigger
    -   if:     "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    -   if:     "$CI_COMMIT_TAG"
        when:   never   # --> Never Run on Manual Release(s)

.Version-Distribution: &Version-Distribution-Variables { GIT_STRATEGY: "clone" }

.Version-Distribution: &Version-Distribution-Script
    - git submodule sync --recursive
    - git submodule update --init --remote --force
    - chmod a+x "${PWD}/.IO/Environment"
    - .IO/Environment "${CI_PROJECT_NAME}" "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" "${CI_COMMIT_TIMESTAMP}"

.Version-Distribution: &Version-Distribution-Dependencies [ { job: "Initialization", artifacts: True } ]

.Version-Distribution: &Version-Distribution-Failure-Allowance True

# ------------------------------------------------------------------------
# Primary Entry-Point (Jobs + Stages + Triggers)
# ------------------------------------------------------------------------

Version:
    tags:           *Version-Distribution-Runner
    rules:          *Version-Distribution-Trigger
    stage:          *Version-Distribution-Stage
    needs:          *Version-Distribution-Dependencies
    script:         *Version-Distribution-Script
    variables:      *Version-Distribution-Variables
    artifacts:      *Version-Distribution-Artifacts
    before_script:  *Version-Distribution-Pre-Execution
    allow_failure:  *Version-Distribution-Failure-Allowance
