#!/usr/bin/env file .

# -*-  Coding: UTF-8  -*- #
# -*-  System: Linux  -*- #
# -*-  Usage:  *.Yaml -*- #

# Owner: Jacob B. Sanders
# Source: code.cloud-technology.io
# License: BSD 3-Clause License

#
# Copyright 2020 Jacob B. Sanders - Cloud Hybrid LLC. & Affiliates
#
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
#
# 1.  Redistributions of source code must retain the above copyright notice, this list of
#     conditions and the following disclaimer.
#
# 2.  Redistributions in binary form must reproduce the above copyright notice, this list of
#     conditions and the following disclaimer in the documentation and/or other materials
#     provided with the distribution.
#
# 3.  Neither the name of the copyright holder nor the names of its contributors may be used
#     to endorse or promote products derived from this software without specific prior written
#     permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.
#

# @TODO: Document `needs` Dependencies: Stages: [Compile, Version, Initialization]
# /opt/Development/Repositories/Cloud/Nexus/.IO/Documentation/CICD/Version-Release-Includes-Example.png

---

#
# ========================================================================
# --> Pipeline: Continuous Integration & Deployment Configuration(s)
# ========================================================================
#

# ------------------------------------------------------------------------
# YAML Configuration Anchors
# ------------------------------------------------------------------------

.Version-Release: &Version-Release-Pre-Execution [ "" ]

.Version-Release: &Version-Release-Runner [ "Docker", "Dot-Environment" ]

.Version-Release: &Version-Release-Image "registry.gitlab.com/gitlab-org/release-cli:latest"

.Version-Release: &Version-Release-Stage "Distribution"

.Version-Release: &Version-Release-Artifacts
    {   reports: { dotenv: ".IO/Environment.env" },
            paths: [   ".IO/Environment.env" ]
    }

.Version-Release: &Version-Release-Commit
    -   if:     "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    -   if:     "$CI_COMMIT_TAG"
        when:   never   # --> Never Run on Manual Release(s)

.Version-Release: &Version-Release-Dependencies [
    {     job: Version,           artifacts: True     },
]

.Version-Release: &Version-Release-Variables { GIT_STRATEGY: "clone" }

.Version-Release: &Version-Release-Settings
    ref:            $CI_COMMIT_SHA
    name:           $PROJECT_NAME - $PROJECT_VERSION
    tag_name:       $PROJECT_VERSION
    description:    "**Automated Release Generation**"


.Version-Release: &Version-Release-Script [ "echo 'Initializing Release Distribution'" ]

# ------------------------------------------------------------------------
# Primary Entry-Point (Jobs + Stages + Triggers)
# ------------------------------------------------------------------------

Release:
    tags:           *Version-Release-Runner
    image:          *Version-Release-Image
    rules:          *Version-Release-Commit
    stage:          *Version-Release-Stage
    needs:          *Version-Release-Dependencies
    script:         *Version-Release-Script
    release:        *Version-Release-Settings
    variables:      *Version-Release-Variables
    before_script:  *Version-Release-Pre-Execution
