#!/usr/bin/env file .

# -*-  Coding: UTF-8  -*- #
# -*-  System: Linux  -*- #
# -*-  Usage:  *.Yaml -*- #

# Owner: Jacob B. Sanders
# Source: code.cloud-technology.io
# License: BSD 3-Clause License

#
# Copyright 2020 Jacob B. Sanders - Cloud Hybrid LLC. & Affiliates
#
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
#
# 1.  Redistributions of source code must retain the above copyright notice, this list of
#     conditions and the following disclaimer.
#
# 2.  Redistributions in binary form must reproduce the above copyright notice, this list of
#     conditions and the following disclaimer in the documentation and/or other materials
#     provided with the distribution.
#
# 3.  Neither the name of the copyright holder nor the names of its contributors may be used
#     to endorse or promote products derived from this software without specific prior written
#     permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.
#

#
# ========================================================================
# --> Pipeline: Continuous Integration & Deployment Configuration(s)
# ========================================================================
#
# Secret-Leaks:
#   - https://docs.gitlab.com/ee/user/application_security/secret_detection/#available-variables
#   - SECRET_DETECTION_COMMIT_FROM: The commit a Gitleaks scan starts at.
#   - SECRET_DETECTION_COMMIT_TO: The commit a Gitleaks scan ends at.
#   - SECRET_DETECTION_EXCLUDED_PATHS: Exclude vulnerabilities from output based on the paths.
#   - SECRET_DETECTION_HISTORIC_SCAN: Flag to enable a historic Gitleaks scan.
#   - SECURE_LOG_LEVEL: Output log verbosity
#

---

#
# ========================================================================
# --> Pipeline: Continuous Integration & Deployment Configuration(s)
# ========================================================================
#

# ------------------------------------------------------------------------
# YAML Configuration Anchors
# ------------------------------------------------------------------------

.Secrets-Detection: &Stage "Setup"

.Secrets-Detection: &Secrets-Detection-Failure-Allowance True

.Secrets-Detection: &Runner
    - "Cloud-Hybrid"
    - "AWS"
    - "Python"
    - "Docker"
    - "Alpine"

.Secrets-Detection: &Secrets-Detection-Trigger
    -   if:     "$CI_COMMIT_MESSAGE =~ /^(Secrets-Detection|Analysis|Audit)?(-|:)?($)?(.*)/imU"
    -   if:     "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
        when:   always  # --> Always Run if Push on `DEFAULT` Branch

.Secrets-Detection: &Secrets-Detection-Dependencies [ { job: "Initialization", artifacts: True } ]

# ------------------------------------------------------------------------
# Primary Entry-Point (Jobs + Stages + Triggers)
# ------------------------------------------------------------------------

Secrets-Parser:
    tags: *Runner
    stage: Analysis
    variables:
        PREFIX: "registry.gitlab.com/gitlab-org/security-products/analyzers"
        VERSION: "3"
        GIT_STRATEGY: "clone"
        DOCKER_DRIVER: "overlay2"
        SECURE_LOG_LEVEL: "debug"
    image: "${PREFIX}/secrets:${VERSION}"
    services: []
    artifacts: { reports:   {
        secret_detection: "gl-secret-detection-report.json" },
        paths: [ "gl-secret-detection-report.json" ]
    }
    needs: *Secrets-Detection-Dependencies
    script: [ "/analyzer run" ]
    before_script: [ "" ]
    allow_failure: *Secrets-Detection-Failure-Allowance
